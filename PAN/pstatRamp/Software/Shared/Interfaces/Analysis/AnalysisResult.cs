/*************************************************************************************************/
/*   Project : IO                                                                                */
/*   Authors : Chris Dawber                                                                      */
/* Reviewers :                                                                                   */
/*************************************************************************************************/

namespace IO.Analysis
{
    /// <summary>
    /// The result of some analysis
    /// </summary>
    public class AnalysisResult
    {
        /// <summary>
        /// The associated analysis data
        /// </summary>
        public AnalysisData Data { get; set; }

        /// <summary>
        /// The log generated by the analysis
        /// </summary>
        public string Log { get; set; }

        /// <summary>
        /// The variance for the raw data in dB
        /// </summary>
        public double VarianceForRawData { get; set; }

        /// <summary>
        /// The variance for the polynomial data in dB
        /// </summary>
        public double VarianceForPolynomial { get; set; }

        /// <summary>
        /// The data sets associated with the result
        /// </summary>
        public double[][] DataSets { get; set; }

        /// <summary>
        /// The Gaussian parameters for each peak
        /// </summary>
        public IPeakParameters[] PeakParameters { get; set; }

        /// <summary>
        /// The variances for each peak
        /// </summary>
        public double[] PeakVariances { get; set; }

        /// <summary>
        /// The outcomes for each peak
        /// </summary>
        public PeakOutcome[] PeakOutcomes { get; set; }

        /// <summary>
        /// Default constructor
        /// </summary>
        public AnalysisResult()
        {
            // Initialise the parameters
            Log = string.Empty;
            VarianceForRawData = double.NaN;
            VarianceForPolynomial = double.NaN;
        }
    }
}
