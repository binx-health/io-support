/*************************************************************************************************/
/*   Project : IO                                                                                */
/*   Authors : Chris Dawber                                                                      */
/* Reviewers :                                                                                   */
/*************************************************************************************************/

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.IO;

namespace IO.Scripting
{
    /// <summary>
    /// Scripts interface
    /// </summary>
    public abstract class IScript
    {
        /// <summary>
        /// Modified flag
        /// </summary>
        [XmlIgnore]
        public virtual bool Modified { get; set; }

        /// <summary>
        /// Loaded flag
        /// </summary>
        [XmlIgnore]
        public virtual bool Loaded { get; set; }

        /// <summary>
        /// The name for the script
        /// </summary>
        public virtual string Name { get; protected set; }

        /// <summary>
        /// The script
        /// </summary>
        [XmlIgnore]
        public abstract string Value { get; set; }

        /// <summary>
        /// Enumeration of script errors
        /// </summary>
        [XmlIgnore]
        public abstract IEnumerable<ScriptError> Errors { get; }

        /// <summary>
        /// Dictionary of variables generated by this script
        /// </summary>
        [XmlIgnore]
        public abstract IDictionary<string, IScriptVariable> NewVariables { get; }

        /// <summary>
        /// Enumeration of variables used by this script
        /// </summary>
        [XmlIgnore]
        public abstract IEnumerable<string> UsedVariables { get; }

        /// <summary>
        /// Enumeration of script children
        /// </summary>
        [XmlIgnore]
        public abstract IEnumerable<string> Children { get; }
    }
}
